package component

import (
	"fmt"
	"strings"
)

templ Link(la LinkAttrs) {
	<a href={ templ.SafeURL(la.Href) } { la.ToAttr()... }>
		{ children... }
	</a>
}

type LinkAttrs struct {
	Href          string
	ID            string
	Class         string
	HxMethod      string
	HxAction      string
	HxSwap        string
	OverrideClass bool
}

func (la *LinkAttrs) ToAttr() templ.Attributes {
	attrs := templ.Attributes{
		"href":  templ.SafeURL(la.Href),
		"class": la.ClassAttr(),
	}
	attrs = la.AddIDAttr(attrs)
	attrs = la.AddHxMethod(attrs)
	attrs = la.AddHxSwap(attrs)
	return attrs
}

func (la *LinkAttrs) ClassAttr() string {
	defaultClass := "font-semibold text-teal-500 hover:text-teal-400"

	if la.OverrideClass {
		return CssClassOverride(defaultClass, la.Class)
	} else {
		return CssClass(defaultClass, la.Class)
	}
}

func (la *LinkAttrs) AddIDAttr(attrs templ.Attributes) templ.Attributes {
	if la.ID != "" {
		attrs["id"] = la.ID
	}
	return attrs
}

func (la *LinkAttrs) AddHxMethod(attrs templ.Attributes) templ.Attributes {
	if la.HxMethod != "" {
		la.HxMethod = strings.ToLower(la.HxMethod)
		attrs[fmt.Sprintf("hx-%s", la.HxMethod)] = la.HxAction
	}
	return attrs
}

func (la *LinkAttrs) AddHxSwap(attrs templ.Attributes) templ.Attributes {
	if la.HxSwap != "" {
		attrs["hx-swap"] = la.HxSwap
	}
	return attrs
}
